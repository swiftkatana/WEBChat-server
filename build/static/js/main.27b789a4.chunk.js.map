{"version":3,"sources":["api/apiKeys.js","api/weatherApi.js","api/weatherRequests.js","redux/weather/weather_action.js","components/SmallLabel.jsx","components/WeatherIcon.jsx","components/ForecastCard.jsx","pages/FavoritesPage.jsx","components/LikeButton.jsx","components/AutoCompelteInput.jsx","components/LeabelMain.jsx","components/CurrentWeather.jsx","pages/HomePage.jsx","components/Header.jsx","App.js","reportWebVitals.js","redux/weather/weather_reducer.js","redux/store.js","index.js"],"names":["apiKey","exports","getfiveDaysForecastsUrl","locationKey","metric","getAutoCompleteSearchesUrl","query","getCurrentWeatherUrl","getCurrentlocationUrl","iconUrl","number","processIconNumber","num","axios","create","baseURL","headers","weatherRequests","weatherApi","get","data","length","status","ADD_TO_FAVORITES","REMOVE_FROM_FAVORITES","FETCH_FAVORITES","OPEN_LAST_WEATHER","OPEN_LAST_LOCTION","CHANGE_MUSARE_TEMPERATURE","locationINS","lastOpenWeather","dispatch","a","getCurrentWeather","localStorage","setItem","type","payload","lastOpenLocation","getCurrentlocation","SmallLabel","props","className","children","WeatherIcon","icon","Image","src","Forecast","weather","favorite","renderTextTemperature","Temperature","Metric","Imperial","Value","Unit","EnglishName","currentDate","Date","align","getDate","getMonth","renderDate","Day","Icon","WeatherText","IconPhrase","Maximum","renderTextTemperatureMaximum","Minimum","renderTextTemperatureMinimum","mapDispatchToProps","connect","weather_reducer","currentWeather","favorites","currentLoction","history","useHistory","handlerClickOnWeather","Key","push","alert","Container","Row","arrFavorites","Object","values","map","index","Col","sm","md","lg","onClick","renderListOfFavorites","addToFavorite","location","favoriteCountries","getItem","split","includes","String","error","removeFromFavorite","arrayFavorites","console","log","doWeHaveThisLocation","newString","filter","join","canLike","useState","like","setLike","useEffect","Provider","value","size","Button","disabled","variant","AutoCompelteInput","search","setSearch","display","setDisplay","options","setOptions","setError","wrapperRef","useRef","id","setTimeout","getAutoCompleteSearches","message","clearTimeout","window","addEventListener","handleClickOutside","removeEventListener","event","wrap","current","contains","target","handleClick","LocalizedName","ref","InputGroup","Prepend","FormControl","placeholder","onChange","text","aria-describedby","Append","i","tabIndex","Country","renderOptions","LeabelMain","CurrentWeather","selectCountry","ID","LocalObservationDateTime","getDay","fiveDaysWeather","setfiveDaysWeather","loadingMain","setLoadingMain","loadingFive","setLoadingFive","setcanLike","getfiveDaysForecasts","DailyForecasts","renderLoading","loction","changeMusareTemperature","masure","Navbar","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","fetchFavorites","finalData","res","state","lastOpenWeatherKey","path","component","Header","exact","HomePage","FavoritesPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INS","action","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","createStore","applyMiddleware","reduxThunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.27b789a4.chunk.js","sourcesContent":["\r\nconst apiKey = 'a39nt3GG9ZNiFsNmXADD0n4KWPSrlIhf'\r\n\r\nexports.getfiveDaysForecastsUrl = (locationKey, metric) => `/forecasts/v1/daily/5day/${locationKey}?metric=${metric}&apikey=${apiKey}&details=true`\r\n\r\nexports.getAutoCompleteSearchesUrl = (query) => `/locations/v1/cities/autocomplete?q=${query}&apikey=${apiKey}`\r\n\r\nexports.getCurrentWeatherUrl = (locationKey) => `/currentconditions/v1/${locationKey}?apikey=${apiKey}`\r\n\r\nexports.getCurrentlocationUrl = (locationKey) => `/locations/v1/${locationKey}?apikey=${apiKey}`\r\n\r\nexports.iconUrl = number => `https://developer.accuweather.com/sites/default/files/${processIconNumber(number)}-s.png`\r\n\r\n\r\n\r\nlet processIconNumber = (num) => {\r\n  if (num < 10)\r\n    return '0' + num\r\n\r\n  return num\r\n\r\n}","import axios from 'axios';\r\nvar config = {\r\n  headers: { 'Access-Control-Allow-Origin': '*' }\r\n};\r\nexport default axios.create({ baseURL: 'http://dataservice.accuweather.com' }, config);","import { getAutoCompleteSearchesUrl, getfiveDaysForecastsUrl, getCurrentWeatherUrl, getCurrentlocationUrl } from \"./apiKeys\";\r\nimport weatherApi from \"./weatherApi\";\r\n\r\n\r\nexport default class weatherRequests {\r\n\r\n  static async getCurrentWeather(locationKey) {\r\n    try {\r\n\r\n      const { data } = await weatherApi.get(getCurrentWeatherUrl(locationKey));\r\n      if (data.length) {\r\n        return { status: 'success', data: data[0] }\r\n      } else\r\n        return { status: 'didntFound', data: data }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n  static async getCurrentlocation(locationKey) {\r\n    try {\r\n      const { data } = await weatherApi.get(getCurrentlocationUrl(locationKey));\r\n      if (data) {\r\n        return { status: 'success', data }\r\n      } else\r\n        return { status: 'didntFound', data: data }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  static async getfiveDaysForecasts(locationKey, metric) {\r\n    try {\r\n      const { data } = await weatherApi.get(getfiveDaysForecastsUrl(locationKey, metric));\r\n      return { status: 'success', data }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n  static async getAutoCompleteSearches(query) {\r\n    try {\r\n      const { data } = await weatherApi.get(getAutoCompleteSearchesUrl(query));\r\n      return { data, status: 'success' }\r\n    } catch (error) {\r\n      throw error\r\n    }\r\n  }\r\n\r\n\r\n}","import weatherRequests from \"../../api/weatherRequests\";\r\n\r\nexport const ADD_TO_FAVORITES = 'ADD_TO_FAVORITES ';\r\n\r\nexport const REMOVE_FROM_FAVORITES = 'REMOVE_FROM_FAVORITES ';\r\n\r\nexport const FETCH_FAVORITES = 'FETCH_FAVORITES ';\r\n\r\nexport const OPEN_LAST_WEATHER = 'OPEN_LAST_WEATHER ';\r\n\r\nexport const OPEN_LAST_LOCTION = 'OPEN_LAST_LOCTION ';\r\n\r\n\r\nexport const CHANGE_MUSARE_TEMPERATURE = 'CHANGE_MUSARE_TEMPERATURE'\r\n\r\nconst locationINS = {\r\n  \"Version\": 0,\r\n  \"Key\": \"\",\r\n  \"Type\": \"\",\r\n  \"Rank\": 0,\r\n  \"LocalizedName\": \"\",\r\n  \"Country\": {\r\n    \"ID\": \"\",\r\n    \"LocalizedName\": \"\"\r\n  },\r\n  \"AdministrativeArea\": {\r\n    \"ID\": \"\",\r\n    \"LocalizedName\": \"\"\r\n  }\r\n}\r\n\r\n\r\nexport const changeMusareTemperature = (masure) => {\r\n  return { type: CHANGE_MUSARE_TEMPERATURE, payload: masure }\r\n}\r\n\r\nexport const addToFavorite = (location = locationINS) => dispatch => {\r\n  try {\r\n    let favoriteCountries = localStorage.getItem('favoriteCountries')\r\n\r\n    if (favoriteCountries) {\r\n\r\n      const arrayFavorites = favoriteCountries.split('-');\r\n      const doWeHaveThisLocation = arrayFavorites.includes(String(location.Key));\r\n\r\n      if (!doWeHaveThisLocation)\r\n        localStorage.setItem('favoriteCountries', favoriteCountries + '-' + location.Key);\r\n\r\n    } else\r\n      localStorage.setItem('favoriteCountries', location.Key);\r\n\r\n    dispatch({ type: ADD_TO_FAVORITES, payload: location });\r\n\r\n    return { status: 'success', data: {} }\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\nexport const removeFromFavorite = (location = locationINS) => dispatch => {\r\n  try {\r\n    let favoriteCountries = localStorage.getItem('favoriteCountries')\r\n\r\n    if (favoriteCountries) {\r\n      const arrayFavorites = favoriteCountries.split('-');\r\n      console.log(arrayFavorites);\r\n      const doWeHaveThisLocation = arrayFavorites.includes(String(location.Key));\r\n      console.log(doWeHaveThisLocation);\r\n\r\n      if (!doWeHaveThisLocation)\r\n        return { status: 'dontHaveFavorites', data: {} }\r\n\r\n      let newString = arrayFavorites.filter(num => num !== String(location.Key)).join('-');\r\n\r\n      localStorage.setItem('favoriteCountries', newString + '-');\r\n\r\n      dispatch({ type: REMOVE_FROM_FAVORITES, payload: location });\r\n      return { status: 'success', data: {} }\r\n    }\r\n\r\n    return { status: 'dontHaveFavorites', data: {} }\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const fetchFavorites = () => async dispatch => {\r\n  try {\r\n    let favoriteCountries = localStorage.getItem('favoriteCountries')\r\n    let finalData = {};\r\n    if (favoriteCountries) {\r\n      let arrayFavorites = favoriteCountries.split('-');\r\n      for (const locationKey of arrayFavorites) {\r\n        if (!locationKey)\r\n          continue\r\n        try {\r\n          const { data, status } = await weatherRequests.getCurrentWeather(locationKey);\r\n          if (status === 'success') {\r\n            const res = await weatherRequests.getCurrentlocation(locationKey)\r\n            if (res.status === 'success')\r\n              finalData[locationKey] = { ...data, ...res.data };\r\n          }\r\n\r\n        } catch (error) {\r\n          console.log('error `', error)\r\n        }\r\n\r\n      }\r\n      dispatch({ type: FETCH_FAVORITES, payload: finalData });\r\n    }\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\n\r\n\r\nexport const lastOpenWeather = (locationKey = '') => async dispatch => {\r\n  try {\r\n\r\n    const { data, status } = await weatherRequests.getCurrentWeather(locationKey)\r\n    if (status !== 'success')\r\n      return { status, data }\r\n    localStorage.setItem('lastOpenWeather', locationKey);\r\n    dispatch({ type: OPEN_LAST_WEATHER, payload: data });\r\n    return { status: 'success', data: {} }\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}\r\n\r\nexport const lastOpenLocation = (locationKey = '') => async dispatch => {\r\n  try {\r\n    const { data, status } = await weatherRequests.getCurrentlocation(locationKey)\r\n    if (status !== 'success')\r\n      return { status, data }\r\n    dispatch({ type: OPEN_LAST_LOCTION, payload: data });\r\n    return { status: 'success', data: {} }\r\n\r\n  } catch (error) {\r\n    throw error;\r\n  }\r\n}","import React from 'react'\r\n\r\nexport default function SmallLabel(props) {\r\n  return (\r\n    <div className='smallLabel'>\r\n      {props.children}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Image } from 'react-bootstrap'\r\nimport { iconUrl } from '../api/apiKeys'\r\n\r\nexport default function WeatherIcon({ icon }) {\r\n  return (\r\n\r\n    <div className='imageWarper'>\r\n      <Image className='currentWeatherImage' src={iconUrl(icon)} />\r\n    </div>\r\n\r\n  )\r\n}\r\n","import React from 'react'\r\nimport SmallLabel from './SmallLabel';\r\nimport WeatherIcon from './WeatherIcon';\r\n\r\nexport default function Forecast({ weather, metric, favorite }) {\r\n  const renderDate = () => {\r\n    if (favorite)\r\n      return (\r\n        <SmallLabel key={12}>\r\n          <p>{weather.EnglishName}</p>\r\n\r\n        </SmallLabel>)\r\n\r\n    const currentDate = new Date(weather.Date);\r\n    return (\r\n      <span className='spanForecastCard' align=\"center\">\r\n        <span className='spanForecastCard' align=\"center\">\r\n          {`${currentDate.getDate()}/${currentDate.getMonth()}`}\r\n        </span>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  const renderTextTemperatureMaximum = () => {\r\n    if (favorite)\r\n      return <SmallLabel key={1}>\r\n        <p>{renderTextTemperature()}</p>\r\n\r\n      </SmallLabel>\r\n\r\n    let Maximum = metric ? weather.Temperature.Maximum : weather.Temperature.Maximum\r\n    return <SmallLabel key={1}>\r\n      <p>{`Max: ${Maximum.Value} ${Maximum.Unit} `}</p>\r\n\r\n    </SmallLabel>\r\n  }\r\n\r\n  const renderTextTemperatureMinimum = () => {\r\n    if (favorite)\r\n      return null\r\n\r\n    let Minimum = metric ? weather.Temperature.Minimum : weather.Temperature.Minimum\r\n    return <SmallLabel key={2} >\r\n      {`Min: ${Minimum.Value} ${Minimum.Unit} `}\r\n    </SmallLabel>\r\n  }\r\n\r\n  const renderTextTemperature = () => {\r\n    let data = metric ? weather.Temperature.Metric : weather.Temperature.Imperial\r\n    return `${data.Value} ${data.Unit}`\r\n  }\r\n\r\n  const renderWeatherLeabel = () => {\r\n    if (favorite)\r\n      return (\r\n        <SmallLabel key={0}>\r\n          {weather.WeatherText}\r\n\r\n        </SmallLabel>\r\n      )\r\n\r\n    return (\r\n      <SmallLabel key={0}>\r\n        {weather.Day.IconPhrase}\r\n\r\n      </SmallLabel>)\r\n  }\r\n\r\n\r\n  const renderImage = () => {\r\n    if (favorite)\r\n      return <WeatherIcon icon={weather.WeatherIcon} />\r\n\r\n    return <WeatherIcon icon={weather.Day.Icon} />\r\n  }\r\n\r\n  return (\r\n    <div className='forecastCardWrapper'>\r\n      {renderDate()}\r\n      { renderImage()}\r\n      { renderWeatherLeabel()}\r\n      { renderTextTemperatureMaximum()}\r\n      { renderTextTemperatureMinimum()}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { lastOpenLocation, lastOpenWeather } from '../redux/weather/weather_action'\r\nimport Forecast from '../components/ForecastCard';\r\nimport { useHistory } from 'react-router-dom'\r\nconst FavoritesPage = ({ lastOpenWeather, lastOpenLocation, favorites, metric }) => {\r\n  const history = useHistory()\r\n  const handlerClickOnWeather = async (weather) => {\r\n    try {\r\n      await lastOpenWeather(weather.Key)\r\n      await lastOpenLocation(weather.Key)\r\n      history.push('/')\r\n\r\n    } catch (error) {\r\n      alert(error)\r\n    }\r\n  }\r\n\r\n  const renderListOfFavorites = () => {\r\n    let arrFavorites = Object.values(favorites)\r\n    if (arrFavorites.length > 0)\r\n      return arrFavorites.map((favorite, index) => {\r\n        return (\r\n          <Col className='forecastCard' sm={2} md={3} lg={2} key={index} onClick={() => handlerClickOnWeather(favorite)}>\r\n            <Forecast\r\n              favorite\r\n              weather={favorite}\r\n              metric={metric}\r\n            />\r\n          </Col>\r\n        )\r\n      });\r\n\r\n    return <h1>you dont have any favorites</h1>\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <Container className='favoritesPage' >\r\n      <Row className='forecasts'>\r\n        {renderListOfFavorites()}\r\n\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\nconst mapStateToProps = ({ weather_reducer }) => ({\r\n  metric: weather_reducer.metric,\r\n  currentWeather: weather_reducer.lastOpenWeather,\r\n  favorites: weather_reducer.favorites,\r\n  currentLoction: weather_reducer.lastOpenLocation\r\n})\r\nconst mapDispatchToProps = {\r\n  lastOpenLocation,\r\n  lastOpenWeather\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FavoritesPage)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { Button } from 'react-bootstrap'\r\nimport { IconContext } from 'react-icons/lib';\r\nimport { RiHeart2Line, RiHeart2Fill } from 'react-icons/ri';\r\nimport { connect } from 'react-redux'\r\nimport { addToFavorite, removeFromFavorite } from '../redux/weather/weather_action';\r\n\r\nfunction LikeButton({ canLike, addToFavorite, favorites, currentLoction, removeFromFavorite, currentWeather }) {\r\n  const [like, setLike] = useState(false)\r\n\r\n  const onClick = () => {\r\n    if (currentLoction) {\r\n      if (favorites[currentLoction.Key]) {\r\n        setLike(false)\r\n        removeFromFavorite(currentLoction)\r\n      }\r\n      else {\r\n        setLike(true)\r\n        addToFavorite({ ...currentLoction, ...currentWeather })\r\n\r\n      }\r\n\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (currentLoction) {\r\n      if (favorites[currentLoction.Key] && !like) {\r\n        setLike(true)\r\n      }\r\n      else if (!favorites[currentLoction.Key] && like) {\r\n        setLike(false)\r\n      }\r\n\r\n    }\r\n\r\n  }, [currentLoction, favorites, like])\r\n\r\n\r\n  return (\r\n    <IconContext.Provider value={{ size: '1.3em' }}>\r\n      <Button disabled={!canLike} onClick={onClick} variant=\"outline-secondary\">{like ? <RiHeart2Fill /> : <RiHeart2Line />}</Button>\r\n    </IconContext.Provider>\r\n  )\r\n}\r\nconst mapStateToProps = ({ weather_reducer }) => ({\r\n  favorites: weather_reducer.favorites,\r\n  currentLoction: weather_reducer.lastOpenLocation,\r\n  currentWeather: weather_reducer.lastOpenWeather,\r\n\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  addToFavorite,\r\n  removeFromFavorite\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LikeButton)","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Button, FormControl, InputGroup } from \"react-bootstrap\";\r\nimport weatherRequests from \"../api/weatherRequests\";\r\nimport { RiSearch2Line, } from 'react-icons/ri';\r\nimport { IconContext } from \"react-icons\";\r\nimport LikeButton from \"./LikeButton\";\r\nconst AutoCompelteInput = ({ search, setSearch, onClick, canLike, locationKey }) => {\r\n  const [display, setDisplay] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [error, setError] = useState(null)\r\n  const wrapperRef = useRef(null);\r\n\r\n\r\n  useEffect(() => {\r\n    let id = setTimeout(() => {\r\n      (async () => {\r\n        try {\r\n          if (!search || options.length)\r\n            return;\r\n          const { data, status } = await weatherRequests.getAutoCompleteSearches(search);\r\n          if (status === 'success') {\r\n            setOptions(data);\r\n            setDisplay(true)\r\n          } else\r\n            setError('didnt found places')\r\n        } catch (error) {\r\n          setError(error.message + ' The allowed number of requests has been exceeded.')\r\n        }\r\n      })()\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearTimeout(id)\r\n    }\r\n\r\n  }, [search, options]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      window.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  });\r\n\r\n  const handleClickOutside = event => {\r\n    const { current: wrap } = wrapperRef;\r\n    if (wrap && !wrap.contains(event.target)) {\r\n      setDisplay(false);\r\n    }\r\n  };\r\n\r\n\r\n  const handleClick = (location) => {\r\n    onClick(location)\r\n    setSearch(location.LocalizedName);\r\n    setDisplay(false);\r\n  }\r\n\r\n  const handleChangeText = (text) => {\r\n    setSearch(text);\r\n    setError('')\r\n    setOptions([]);\r\n  }\r\n\r\n  const renderOptions = () => {\r\n\r\n    if (display && options.length > 0)\r\n      return (\r\n        <div className=\"optionsautoContainer\">\r\n          {options\r\n            .map((value, i) => {\r\n              return (\r\n                <div\r\n                  onClick={() => handleClick(value)}\r\n                  className=\"option\"\r\n                  key={i}\r\n                  tabIndex=\"0\"\r\n                >\r\n                  <span className=\"optionsText\"> Country: {value.Country.LocalizedName} , City: {value.LocalizedName}</span>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )\r\n  }\r\n  return (\r\n    <IconContext.Provider value={{ size: '1em' }}>\r\n      <div ref={wrapperRef} className=\" optionsContainer\">\r\n        <div className=\"optionsCenter\">\r\n          <InputGroup size='lg' className=\"mb-3\">\r\n            <InputGroup.Prepend>\r\n              <Button disabled variant=\" \">\r\n                <RiSearch2Line />\r\n              </Button>\r\n            </InputGroup.Prepend>\r\n            <FormControl\r\n              className=\"inputSearch\"\r\n              onClick={() => setDisplay(!display)}\r\n              placeholder=\"Type to search\"\r\n              value={search}\r\n              onChange={event => handleChangeText(event.target.value)} aria-describedby=\"basic-addon1\" />\r\n\r\n            <InputGroup.Append>\r\n              <LikeButton locationKey={locationKey} canLike={canLike} />\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n\r\n\r\n          {error ?\r\n            <span>{error}</span> :\r\n\r\n            renderOptions()}\r\n\r\n        </div>\r\n      </div>\r\n    </IconContext.Provider>\r\n\r\n  );\r\n};\r\n\r\n\r\n\r\nexport default AutoCompelteInput;","import React from 'react'\r\n\r\nexport default function LeabelMain(props) {\r\n  return (\r\n    <div className='LeabelMain' >\r\n      <h2> {props.children}</h2>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport LeabelMain from './LeabelMain';\r\nimport SmallLabel from './SmallLabel';\r\nimport WeatherIcon from './WeatherIcon';\r\nexport default function CurrentWeather({ currentWeather, selectCountry, metric }) {\r\n\r\n  const renderDate = () => {\r\n    const months = [\r\n      'January',\r\n      'February',\r\n      'March',\r\n      'April',\r\n      'May',\r\n      'June',\r\n      'July',\r\n      'August',\r\n      'September',\r\n      'October',\r\n      'Nocvember',\r\n      'December',\r\n    ];\r\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\r\n    const currentDate = new Date(currentWeather.LocalObservationDateTime);\r\n    return `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]\r\n      }`;\r\n  }\r\n\r\n  const renderTextTemperature = () => {\r\n    let data = metric ? currentWeather.Temperature.Metric : currentWeather.Temperature.Imperial\r\n    return `${data.Value} ${data.Unit}`\r\n  }\r\n  return (\r\n    <>\r\n      <div className=' leabelsInfo'>\r\n        <LeabelMain >\r\n          {`${selectCountry.LocalizedName}, ${selectCountry.Country.ID}`}\r\n        </LeabelMain>\r\n        <SmallLabel>\r\n          {renderDate()}\r\n        </SmallLabel>\r\n      </div>\r\n      <div className='currentWeatherWrapper'>\r\n        <WeatherIcon icon={currentWeather.WeatherIcon} />\r\n        <div className='temperatureWrapper'>\r\n          <h3 className='temperature'>\r\n            {renderTextTemperature()}&#176;\r\n          </h3>\r\n          <SmallLabel>\r\n            {currentWeather.WeatherText}\r\n          </SmallLabel>\r\n        </div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Col, Container, Image, Row, } from \"react-bootstrap\";\r\n\r\nimport AutoCompelteInput from '../components/AutoCompelteInput';\r\nimport weatherRequests from '../api/weatherRequests';\r\nimport CurrentWeather from '../components/CurrentWeather';\r\nimport Forecast from '../components/ForecastCard';\r\nimport { lastOpenLocation, lastOpenWeather } from '../redux/weather/weather_action';\r\n\r\nconst HomePage = ({ metric, currentWeather, currentLoction, lastOpenLocation, lastOpenWeather }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [fiveDaysWeather, setfiveDaysWeather] = useState(null);\r\n  const [loadingMain, setLoadingMain] = useState(false)\r\n  const [loadingFive, setLoadingFive] = useState(false)\r\n  const [canLike, setcanLike] = useState(false)\r\n  useEffect(() => {\r\n    if (currentLoction) {\r\n      (async () => {\r\n        try {\r\n          setcanLike(false)\r\n          setLoadingMain(true);\r\n          setLoadingFive(true);\r\n          const { status } = await lastOpenWeather(currentLoction.Key);\r\n          setLoadingMain(false);\r\n          if (status === 'success') {\r\n            const { data, status } = await weatherRequests.getfiveDaysForecasts(currentLoction.Key, metric)\r\n            setLoadingFive(false)\r\n            setcanLike(true)\r\n\r\n            if (status === 'success')\r\n              setfiveDaysWeather(data.DailyForecasts)\r\n          }\r\n        } catch (error) {\r\n          console.log('error on server side', error)\r\n        }\r\n\r\n      })();\r\n    }\r\n\r\n  }, [currentLoction, metric, lastOpenWeather])\r\n\r\n\r\n\r\n  const handleLoctionClick = (loction) => {\r\n    try {\r\n\r\n      lastOpenLocation(loction.Key)\r\n    } catch (error) {\r\n      alert(\"api error, The allowed number of requests has been exceeded\")\r\n\r\n    }\r\n  }\r\n\r\n  const handleChangeText = (text) => {\r\n    setSearch(text);\r\n\r\n  }\r\n\r\n  const renderLoading = () => {\r\n    return (\r\n      <div>\r\n        <Image src='./loading.gif' />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const renderFiveWeather = () => {\r\n    if (loadingFive)\r\n      return renderLoading()\r\n\r\n    if (!fiveDaysWeather)\r\n      return null\r\n\r\n\r\n    return fiveDaysWeather.map((weather, i) =>\r\n      <Col sm={12} md={4} lg={2} key={i}>\r\n        <Forecast\r\n          id={i}\r\n          weather={weather}\r\n          metric={metric}\r\n        />\r\n\r\n      </Col>\r\n    )\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n  const rendercurrentWeather = () => {\r\n    if (loadingMain)\r\n      return renderLoading();\r\n\r\n    if (!currentWeather || !currentLoction)\r\n      return null\r\n    return <CurrentWeather selectCountry={currentLoction} metric={metric} currentWeather={currentWeather} />;\r\n\r\n  }\r\n  return (\r\n    <Container className=\"homePage\" >\r\n      <AutoCompelteInput canLike={canLike} onClick={handleLoctionClick} search={search} setSearch={handleChangeText} />\r\n      {rendercurrentWeather()}\r\n      <div className='forecastWrapper' >\r\n        <Row className='forecasts'>\r\n          {renderFiveWeather()}\r\n        </Row>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\nconst mapStateToProps = ({ weather_reducer }) => ({\r\n  metric: weather_reducer.metric,\r\n  currentWeather: weather_reducer.lastOpenWeather,\r\n  currentLoction: weather_reducer.lastOpenLocation\r\n})\r\n\r\n\r\nconst mapDispatchToProps = {\r\n  lastOpenLocation,\r\n  lastOpenWeather\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage)","import React from 'react'\r\nimport { Button, Image, Nav, Navbar } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { changeMusareTemperature } from '../redux/weather/weather_action'\r\n\r\nconst Header = ({ metric, changeMusareTemperature }) => {\r\n\r\n  const renderBtnToChangeMusare = () => {\r\n\r\n    return <Button onClick={changeMusareTemperature} variant=\"\">Change to  {metric ? '℉' : '℃'} </Button>\r\n\r\n  }\r\n\r\n  return (\r\n    <Navbar expand=\"lg\">\r\n      <Navbar.Brand href=\"#/\"><Image src=\"./brand.gif\" className=\"brandImage\" /></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#/\">Home</Nav.Link>\r\n          <Nav.Link href=\"#/favorites\">favorites</Nav.Link>\r\n        </Nav>\r\n        {renderBtnToChangeMusare()}\r\n\r\n      </Navbar.Collapse>\r\n\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ weather_reducer }) => ({\r\n  metric: weather_reducer.metric\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  changeMusareTemperature\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header)\r\n","import React, { useEffect } from \"react\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { connect } from 'react-redux'\n\n\nimport FavoritesPage from \"./pages/FavoritesPage\";\nimport HomePage from \"./pages/HomePage\";\nimport Header from \"./components/Header\";\nimport { fetchFavorites, lastOpenLocation, lastOpenWeather } from \"./redux/weather/weather_action\";\n\nfunction App({ fetchFavorites, lastOpenLocation }) {\n\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const lastOpenWeatherKey = localStorage.getItem(\"lastOpenWeather\");\n        if (lastOpenWeatherKey) {\n          await lastOpenLocation(lastOpenWeatherKey);\n        }\n        fetchFavorites();\n      } catch (error) {\n        alert(\"api error, The allowed number of requests has been exceeded\")\n      }\n    })()\n  })\n\n\n  return (\n    <HashRouter >\n      <Route path='/' component={Header} />\n      <Route path=\"/\" exact component={HomePage} />\n      <Route path=\"/favorites\" exact component={FavoritesPage} />\n    </HashRouter>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n\n})\n\nconst mapDispatchToProps = {\n  fetchFavorites,\n  lastOpenWeather,\n  lastOpenLocation\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { REMOVE_FROM_FAVORITES, FETCH_FAVORITES, OPEN_LAST_WEATHER, ADD_TO_FAVORITES, CHANGE_MUSARE_TEMPERATURE, OPEN_LAST_LOCTION } from \"./weather_action\";\r\n\r\nlet INS = { favorites: {}, lastOpenWeather: null, metric: true, lastOpenLocation: null };\r\n\r\nconst weather_reducer = (state = INS, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case ADD_TO_FAVORITES:\r\n      state.favorites[payload.Key] = payload;\r\n      return { ...state };\r\n\r\n    case FETCH_FAVORITES:\r\n      state.favorites = { ...state.favorites, ...payload }\r\n      return { ...state };\r\n\r\n    case REMOVE_FROM_FAVORITES:\r\n      delete state.favorites[payload.Key];\r\n      return { ...state };\r\n\r\n\r\n    case OPEN_LAST_WEATHER:\r\n      state.lastOpenWeather = payload;\r\n      return { ...state };\r\n\r\n    case CHANGE_MUSARE_TEMPERATURE:\r\n      state.metric = !state.metric;\r\n      return { ...state };\r\n\r\n\r\n    case OPEN_LAST_LOCTION:\r\n      state.lastOpenLocation = payload;\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport default weather_reducer","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from \"redux-thunk\";\r\nimport weather_reducer from './weather/weather_reducer';\r\n\r\nconst reducers = combineReducers({\r\n  weather_reducer,\r\n});\r\n\r\nconst composeEnhancers = (\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ trace: true, traceLimit: 25, })) || compose;\r\n\r\nexport default createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/store';\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}