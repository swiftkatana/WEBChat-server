{"version":3,"sources":["config/state.js","respondList.js","history.js","api/serverIP.js","api/myserver.js","io.js","action/index.js","action/types.js","components/screens/ScreenSerachFriend.jsx","components/screens/DrawerPage.jsx","components/LogicArea.js","components/screens/ProfileScreen.jsx","components/chat/FrindCard.jsx","components/chat/UsersList.jsx","components/screens/FriendsListScreen.jsx","components/chat/ChatWindow.jsx","components/screens/ChatScreen.jsx","components/chat/Login.jsx","components/chat/Register.jsx","components/screens/ScreenLoginRegister.jsx","components/screens/LobyPageScreen.jsx","App.jsx","serviceWorker.js","reducers/chatArea.js","reducers/callReducer.js","reducers/languageReducer.js","reducers/index.js","reducers/userReducer.js","index.js","api/apiKeys.js"],"names":["exports","state","productionIp","responedList","DBError","infoInvalid","route","FaildSave","loginFaildAlreadyConnect","UserIsAlreadyCreated","UserNotCreated","companyNameExists","usersNotFound","emailNotExistsL","NotExists","isInUse","history","createHashHistory","changeURL","url","location","pathname","push","ip","axios","create","baseURL","headers","socketIOClient","openChat","chatId","dispatch","a","server","post","data","err","console","log","alert","type","payload","updatefriend","add_Friend","newFriend","fetchChats","Chats","apiKeys","userGetChatsUrl","ids","catch","then","res","chats","SerachFriend","users","filterUsers","query","idForTheClock","getAllUsers","props","user","isLogin","myserver","sender","setState","onClickSendReq","geter","filterUsersForSerach","IsUserIsGood","RegExp","test","email","_id","connections","cancelOrStartTheClock","clearTimeout","time","setTimeout","filter","onChangText","e","target","value","renderUsersList","map","ListGroup","Item","key","className","Row","Col","xs","Avatar","alt","src","imageProfile","style","fontSize","firstName","onClick","this","Container","InputGroup","FormControl","onChange","id","placeholder","Prepend","Text","React","Component","connect","auth","useStyles","makeStyles","theme","root","display","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","alignItems","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","drawer","flexShrink","drawerPaper","drawerHeader","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","language","changeLeg","leg","createCHAT","formValues","deleteChat","rendId","delete","signOut","children","classes","useTheme","useState","open","setOpen","container","document","querySelector","addEventListener","startTouch","moveTouch","initialX","initialY","touches","clientX","clientY","currentX","currentY","diffX","diffY","Math","abs","handleDrawerClose","handleDrawerOpen","preventDefault","onClickOpenFriendChat","renderLogOutAndProfile","Fragment","ListItem","button","ListItemIcon","ListItemText","primary","texts","loginRegisterScreen","login","register","AddFrindButtonAndFriendList","renderFrindsList","friends","Object","values","lastName","renderImgLeg","nextLan","languages","l","langNow","CssBaseline","AppBar","position","clsx","Toolbar","Typography","variant","noWrap","IconButton","color","aria-label","edge","Drawer","anchor","paper","direction","Button","Divider","List","LogicArea","show","whatKind","body","lastFriendReq","newReqSound","Audio","setListenerSocket","io","connected","on","status","play","chat","deleteFriend","addMessage","off","onClickDeclineReq","onClickAcceptReq","accepter","onShowOrHide","renderModal","onGood","onBad","good","bad","header","Modal","aria-labelledby","centered","onHide","Header","closeButton","Title","Body","Footer","Profile","friend","renderName","FrindCard","buttons","Grid","item","Tooltip","title","text","UsersList","whatKindOfList","friendsListHeader","arr","length","indexOf","onclickDeletefriend","onclickBlockfriend","btn1","btn2","btn3","renderFriendsList","renderStyleForTheMessage","mesagesArr","message","index","aria-live","aria-atomic","minHeight","senderId","textAlign","top","right","minWidth","backgroundColor","date","d","Date","floor","m","y","renderDateOfCreateMessage","createTime","senderName","scroolDown","getDate","ChatScreen","scrooDown","float","clear","ref","el","scrollToBottom","meassgesEnd","scrollIntoView","behavior","addmessage","onChangeText","meassge","currentTarget","emit","onEnterPress","keyCode","shiftKey","handlerClickMSG","toLocaleString","hour","minute","renderSomeOneIsTypeing","whoIsTypeingNow","names","name","meassges","createRef","call","myStream","theirStream","gotAcall","onCall","close","elem","height","scrollHeight","messages","onSubmit","Append","setUpOffer","onKeyDown","as","rows","aria-multiline","autoComplete","chatArea","Login","setEmail","password","setPassword","hidePassword","setHidePassword","error","setError","handlerSubmit","get","userLoginUrl","Form","leabel","Group","controlId","Label","Control","required","subText","Register","onRegister","password2","setPassword2","persist","leabel2","placeholder2","setLogin","size","block","buttonForRegister","buttonForLogin","path","exact","component","FriendsList","LobyPageScreen","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","INS","thierStream","English","navBtn","signIn","gallery","errorLogin","address","phone","Hebrew","languageReducer","keys","action","combineReducers","form","reducer","forEach","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","trace","traceLimit","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","getElementById","URL","process","href","origin","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker","userRegisterUrl","userChangePasswrordUrl","userChangePasswordWithRestCode","useruploadshfits","userRequestRestCode","userUpdateStyleUrl"],"mappings":"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","file":"static/js/main.fd54f6bf.chunk.js","sourcesContent":["exports.state = 'dev'\r\nexports.productionIp = ''","exports.responedList = {\r\n  DBError: \"DBError\",\r\n  infoInvalid: \"infoInvalid\",\r\n  route: \"koral | Michael you send me bad request! \",\r\n  FaildSave: \"FaildSave\",\r\n  loginFaildAlreadyConnect: \"loginFaildAlreadyConnect\",\r\n  //error when someone try to register but using a exists email please try diffrent email\r\n  UserIsAlreadyCreated: \"UserIsAlreadyCreated\",\r\n  // error when try to login to user but could not found email is wrong\r\n  UserNotCreated: \"UserNotCreated\",\r\n  // when try to create a company and there is already a company with this name\r\n  companyNameExists: \"companyNameExists\",\r\n  // error when someone try to login but user not exists or wrong info\r\n  usersNotFound: \"usersNotFound\",\r\n  // error when someone try to use a fake or not exists email\r\n  emailNotExistsL: \"emailIsFake\",\r\n  // error when the DB cant find something\r\n  NotExists: \"NotExists\",\r\n  isInUse: \"isInUse\",\r\n};\r\n","import { createHashHistory } from \"history\";\r\nlet history = createHashHistory();\r\n\r\nexport const changeURL = (url) => {\r\n  if (history.location.pathname !== url) {\r\n    history.push(url);\r\n  }\r\n};\r\n\r\nexport default history;\r\n","import { productionIp, state } from \"../config/state\";\r\n\r\n/* eslint-disable no-unused-vars */\r\nconst inMyServer = \"http://84.108.76.83:1029\";\r\nconst ip = state === 'dev' ? inMyServer : productionIp;\r\nexport default ip\r\n","import axios from 'axios';\r\n\r\nimport ip from './serverIP'\r\nvar config = {\r\n    headers: {'Access-Control-Allow-Origin': '*'}\r\n};\r\nexport default axios.create({baseURL:ip},config);","import socketIOClient from 'socket.io-client'\r\nimport ip from './api/serverIP'\r\n\r\nexport default new socketIOClient(ip);","/* eslint-disable no-useless-escape */\r\nimport { changeURL } from \"../history\";\r\n\r\nimport server from \"../api/myserver\";\r\nimport {\r\n  SIGN_IN,\r\n  SIGN_OUT,\r\n  CREATE_USER,\r\n  CREATE_CHAT,\r\n  FETCH_CHAT,\r\n  FETCH_CHATS,\r\n  DELETE_CHAT,\r\n  WHAT_SYSTEM,\r\n  OPEN_CHAT,\r\n  UPDATE_STATUS_FRIEND,\r\n  NEW_FRIEND,\r\n  CHANGE_LEGUAGE,\r\n  DELETE_FRIEND,\r\n  ADD_MESSAGE,\r\n} from \"./types\";\r\nimport io from \"../io\";\r\nimport apiKeys from \"../api/apiKeys\";\r\nimport { responedList } from \"../respondList\";\r\n\r\n// eslint-disable-next-line no-unused-vars\r\nconst config = {\r\n  onUploadProgress: function (progressEvent) {\r\n    var percentCompleted = Math.round(\r\n      (progressEvent.loaded * 100) / progressEvent.total\r\n    );\r\n    console.log(percentCompleted);\r\n  },\r\n};\r\nexport const openChat = (chatId) => async (dispatch) => {\r\n  const { data } = await server.post(\"/api/chat/getChat\", { chatId });\r\n  if (data.err) {\r\n    console.log(data);\r\n    alert(data.err);\r\n    return;\r\n  } else {\r\n    dispatch({\r\n      type: OPEN_CHAT,\r\n      payload: data,\r\n    });\r\n\r\n    changeURL(\"/chat\");\r\n  }\r\n};\r\n\r\nexport const createCHAT = (formValues) => async (dispatch) => {\r\n  const { data } = await server.post(\"/api/chat/createchat\", formValues);\r\n  console.log(data);\r\n\r\n  dispatch({ type: CREATE_CHAT, payload: data });\r\n};\r\nexport const updatefriend = (data) => {\r\n  return {\r\n    type: UPDATE_STATUS_FRIEND,\r\n    payload: data,\r\n  };\r\n};\r\nexport const add_Friend = (newFriend) => {\r\n  return {\r\n    type: NEW_FRIEND,\r\n    payload: newFriend,\r\n  };\r\n};\r\n\r\nexport const fetchChats = (Chats) => async (dispatch) => {\r\n  const chats = await server\r\n    .post(apiKeys.userGetChatsUrl, { ids: Chats })\r\n    .catch((err) => responedList.DBError)\r\n    .then((res) => res.data);\r\n  if (!chats || chats.err || chats === \"DBError\") {\r\n    console.log(\"error\");\r\n  } else {\r\n\r\n    dispatch({\r\n      type: FETCH_CHATS,\r\n      payload: chats,\r\n    });\r\n  }\r\n};\r\n\r\nexport const fetchChat = (CHATId) => async (dispatch) => {\r\n  const res = await server.get(`/api/user/CHAT${CHATId}`);\r\n\r\n  dispatch({\r\n    type: FETCH_CHAT,\r\n    payload: res.data,\r\n  });\r\n};\r\n\r\nexport const addMessage = (data) => {\r\n  return { type: ADD_MESSAGE, payload: data };\r\n}\r\nexport const deleteFriend = (friend) => {\r\n  return {\r\n    type: DELETE_FRIEND,\r\n    payload: friend,\r\n  };\r\n};\r\n\r\n// export const editCHAT =(CHATId,formValues)=> async dispatch=>{\r\n//     const res = await server.put(`/CHAT/edit`,{id:CHATId,formValues});\r\n//     dispatch({type:EDIT_CHAT,payload:res.data})\r\n//     setTimeout(()=>{history.push(\"/\")},50) ;\r\n\r\n// }\r\n\r\nexport const deleteChat = (rendId) => (dispatch) => {\r\n  server.delete(`/chat/delete/${rendId}`);\r\n  dispatch({ type: DELETE_CHAT, payload: rendId });\r\n  setTimeout(() => {\r\n    changeURL(\"/\");\r\n  }, 40);\r\n};\r\nexport const createUser = (formValues, signIn) => async (dispatch) => {\r\n  const res = await server\r\n    .post(apiKeys.userRegisterUrl, formValues)\r\n    .then((res) => res.data)\r\n    .catch((err) => responedList.DBError);\r\n\r\n  dispatch({ type: CREATE_USER, payload: res });\r\n  if (!res.err) {\r\n    io.emit(\"loginToTheWebSite\", formValues.email);\r\n    signIn(res._id);\r\n  }\r\n};\r\nexport const signIn = (data) => {\r\n  return { type: SIGN_IN, payload: data };\r\n};\r\n\r\nexport const signOut = () => {\r\n  return {\r\n    type: SIGN_OUT,\r\n  };\r\n};\r\n\r\nexport const isSystemIsPc = () => (dispatch) => {\r\n  const IsSystemPcTrueOrFalse = isMobileDevice();\r\n  dispatch({\r\n    type: WHAT_SYSTEM,\r\n    payload: IsSystemPcTrueOrFalse,\r\n  });\r\n};\r\n\r\nexport const origenalAddress = (newaddress) => (dispatch) => {\r\n  dispatch({\r\n    type: \"NEW_ADDRESS\",\r\n    payload: newaddress,\r\n  });\r\n};\r\n\r\nfunction isMobileDevice() {\r\n  var check = false;\r\n\r\n  (function (a) {\r\n    if (\r\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\r\n        a\r\n      ) ||\r\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(\r\n        a.substr(0, 4)\r\n      )\r\n    )\r\n      check = true;\r\n  })(navigator.userAgent || navigator.vendor || window.opera);\r\n  return check;\r\n}\r\n\r\nexport const changeLeg = (leg) => {\r\n  return {\r\n    type: CHANGE_LEGUAGE,\r\n    payload: leg,\r\n  };\r\n};\r\n","export const SIGN_IN = \"SIGN_IN\";\r\nexport const SIGN_OUT = \"SIGN_OUT\";\r\nexport const CREATE_CHAT = \"CREATE_CHAT\";\r\nexport const FETCH_CHATS = \"FETCH_CHATS\";\r\nexport const FETCH_CHAT = \"FETCH_CHAT\";\r\nexport const DELETE_CHAT = \"DELETE_CHAT\";\r\nexport const OPEN_CHAT = \"OPEN_CHAT\";\r\nexport const EDIT_CHAT = \"EDIT_CHAT\";\r\nexport const SELECTED_CHAT = \"SELECTED_CHAT\";\r\nexport const CREATE_USER = \"CREATE_USER\";\r\nexport const LOGIN = \"LOGIN\";\r\nexport const WHAT_SYSTEM = \"WHAT_SYSTEM\";\r\nexport const NEW_FRIEND = \"NEW_FRIEND\";\r\nexport const UPDATE_STATUS_FRIEND = \"UPDATE_STATUS_FRIEND\";\r\nexport const CHANGE_LEGUAGE = \"CHANGE_LEGUAGE\";\r\nexport const DELETE_FRIEND = \"DELETE_FRIEND\";\r\nexport const ADD_MESSAGE = \"ADD_MESSAGE\";\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  FormControl,\r\n  InputGroup,\r\n  Container,\r\n  ListGroup,\r\n  Col,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nimport { add_Friend } from \"../../action\";\r\nimport myserver from \"../../api/myserver\";\r\nimport { changeURL } from \"../../history\";\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\nclass SerachFriend extends React.Component {\r\n  state = {\r\n    users: [],\r\n    filterUsers: [],\r\n    query: \"\",\r\n    idForTheClock: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (!this.props.user || !this.props.isLogin) changeURL(\"/\");\r\n    this.getAllUsers();\r\n  }\r\n\r\n  getAllUsers = async () => {\r\n    if (!this.props.user || !this.props.isLogin) return null;\r\n    const res = await myserver.post(\"/api/user/getUserForSerach\", {\r\n      sender: this.props.user,\r\n    });\r\n    console.log(res);\r\n\r\n    this.setState({ users: res.data });\r\n  };\r\n\r\n  onClickSendReq = (geter) => {\r\n    myserver.post(\"/api/user/addnewfriend\", { geter, sender: this.props.user });\r\n  };\r\n  filterUsersForSerach = (user) => {\r\n    let IsUserIsGood = true;\r\n    if (!new RegExp(\"^\" + this.state.query).test(user.email))\r\n      IsUserIsGood = false;\r\n    if (this.props.user._id === user._id) IsUserIsGood = false;\r\n    if (this.props.user.connections[user._id]) IsUserIsGood = false;\r\n    return IsUserIsGood;\r\n  };\r\n\r\n  cancelOrStartTheClock = () => {\r\n    if (this.state.idForTheClock) {\r\n      console.log(\"clear\");\r\n      clearTimeout(this.state.idForTheClock);\r\n      this.setState({ idForTheClock: \"\" });\r\n    }\r\n    const time = setTimeout(() => {\r\n      const filter = this.state.users.filter((user) =>\r\n        this.filterUsersForSerach(user)\r\n      );\r\n      this.setState({ filterUsers: filter });\r\n      console.log(\"start\");\r\n    }, 200);\r\n    this.setState({ idForTheClock: time });\r\n  };\r\n\r\n  onChangText = (e) => {\r\n    this.setState({ query: e.target.value });\r\n    this.cancelOrStartTheClock();\r\n  };\r\n  renderUsersList = () => {\r\n    if (!this.state.filterUsers) return null;\r\n    return this.state.filterUsers.map((user) => (\r\n      <ListGroup.Item key={user._id} className=\"row\">\r\n        <Row>\r\n          <Col xs=\"4\">\r\n            <Avatar\r\n              alt=\"profile\"\r\n              src={user.imageProfile}\r\n              style={{ fontSize: 30 }}\r\n            />\r\n          </Col>\r\n          <Col xs=\"7\">\r\n            <p>{`${user.firstName} ${user.email}`}</p>\r\n          </Col>\r\n          <Col xs=\"1\">\r\n            <Avatar\r\n              className=\"imgLeg imageAddFri\"\r\n              onClick={() => this.onClickSendReq(user)}\r\n              alt=\"add button\"\r\n              src=\"addFriend.png\"\r\n              style={{ fontSize: 30 }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    ));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <InputGroup className=\"mb-2 mr-sm-2\">\r\n          <FormControl\r\n            value={this.state.query}\r\n            onChange={this.onChangText}\r\n            id=\"inlineFormInputGroupUsername2\"\r\n            placeholder=\"email\"\r\n          />\r\n          <InputGroup.Prepend>\r\n            <InputGroup.Text>@</InputGroup.Text>\r\n          </InputGroup.Prepend>\r\n        </InputGroup>\r\n        <ListGroup>{this.renderUsersList()}</ListGroup>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  isLogin: state.auth.isLogin,\r\n});\r\n\r\nexport default connect(mapStateToProps, { add_Friend })(SerachFriend);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nimport {\r\n  createCHAT,\r\n  openChat,\r\n  deleteChat,\r\n  fetchChats,\r\n  signOut,\r\n  changeLeg,\r\n} from \"../../action\";\r\nimport history, { changeURL } from \"../../history\";\r\nimport ip from \"../../api/serverIP\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    alignItems: \"center\",\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    marginLeft: drawerWidth,\r\n    transition: theme.transitions.create([\"margin\", \"width\"], {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(6),\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n  },\r\n  drawerHeader: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n    justifyContent: \"flex-end\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(2),\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    marginLeft: -drawerWidth,\r\n  },\r\n  contentShift: {\r\n    transition: theme.transitions.create(\"margin\", {\r\n      easing: theme.transitions.easing.easeOut,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n    marginLeft: 0,\r\n  },\r\n}));\r\n\r\nfunction DrawerPage({ user, children, language, changeLeg }, ...props) {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(true);\r\n  var container = document.querySelector(\"#root\");\r\n\r\n  container.addEventListener(\"touchstart\", startTouch, false);\r\n  container.addEventListener(\"touchmove\", moveTouch, false);\r\n\r\n  // Swipe Up / Down / Left / Right\r\n  var initialX = null;\r\n  var initialY = null;\r\n\r\n  function startTouch(e) {\r\n    initialX = e.touches[0].clientX;\r\n    initialY = e.touches[0].clientY;\r\n  }\r\n\r\n  function moveTouch(e) {\r\n    if (initialX === null) {\r\n      return;\r\n    }\r\n\r\n    if (initialY === null) {\r\n      return;\r\n    }\r\n\r\n    var currentX = e.touches[0].clientX;\r\n    var currentY = e.touches[0].clientY;\r\n\r\n    var diffX = initialX - currentX;\r\n    var diffY = initialY - currentY;\r\n\r\n    if (Math.abs(diffX) > Math.abs(diffY)) {\r\n      // sliding horizontally\r\n      if (diffX > 0) {\r\n        // swiped left\r\n        handleDrawerClose();\r\n      } else {\r\n        // swiped right\r\n        handleDrawerOpen();\r\n      }\r\n    }\r\n\r\n    initialX = null;\r\n    initialY = null;\r\n\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const onClickOpenFriendChat = (chatId) => {\r\n    props.openChat(chatId);\r\n  };\r\n\r\n  const renderLogOutAndProfile = () => {\r\n    if (!user)\r\n      return (\r\n        <ListItem\r\n          onClick={() => {\r\n            changeURL(\"/\");\r\n          }}\r\n          button\r\n          key={\"login buuton\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src={ip + \"/login.png\"}\r\n              alt=\"login button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={`${language.texts.loginRegisterScreen.login.button} / ${language.texts.loginRegisterScreen.register.button}`} />\r\n        </ListItem>\r\n      );\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <ListItem\r\n          onClick={() => changeURL(\"/profile\")}\r\n          button\r\n          key={\"profile buuton\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src={props.user.imageProfile}\r\n              alt=\"profile button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={props.user.firstName} />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => {\r\n            changeURL(\"/\");\r\n            props.signOut(props.user.email);\r\n          }}\r\n          button\r\n          key={\"LogOut buuton\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src=\"logOut.png\"\r\n              alt=\"logOut button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"LogOut\"} />\r\n        </ListItem>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n  const AddFrindButtonAndFriendList = () => {\r\n    if (!user) return null;\r\n    return (\r\n      <>\r\n        <ListItem onClick={() => changeURL(\"addFrind\")} button key={\"addFrind\"}>\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src=\"serachF.png\"\r\n              alt=\"addFrind button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Serach A Frined\"} />\r\n        </ListItem>\r\n        <ListItem\r\n          onClick={() => changeURL(\"friends.list\")}\r\n          button\r\n          key={\"friends.list\"}\r\n        >\r\n          <ListItemIcon>\r\n            <img\r\n              className=\"fa fa-plus-circle\"\r\n              src=\"friendsList.png\"\r\n              alt=\"friends.list button\"\r\n            />{\" \"}\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"friends list\"} />\r\n        </ListItem>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderFrindsList = () => {\r\n    if (!user) return null;\r\n    if (!user.friends) return null;\r\n    const friends = Object.values(user.friends);\r\n    return friends.map((user) =>\r\n\r\n      <ListItem\r\n        onClick={() => onClickOpenFriendChat(user.chatId)}\r\n        button\r\n        key={user._id}\r\n      >\r\n        <img src={user.imageProfile} alt=\"profile \" />\r\n        <ListItemText primary={`${user.firstName} ${user.lastName}`} />\r\n      </ListItem>\r\n    );\r\n  };\r\n  const renderImgLeg = () => {\r\n    let nextLan = language.languages.filter(l => l !== language.langNow)\r\n    return <img src={`${ip}/${nextLan[0]}.png`} onClick={() => changeLeg(nextLan[0])} className='imgLeg' alt='icon for change leg right now hebrew' />\r\n  }\r\n\r\n  return (\r\n    <div className={` ${language.langNow === \"English\" ? \"textLeft\" : \"textRight\"} ${classes.root} `}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <Typography variant=\"h6\" noWrap></Typography>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, open && classes.hide)}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <div className={classes.drawerHeader}>\r\n          <IconButton onClick={handleDrawerClose}>\r\n            {theme.direction === \"ltr\" ? (\r\n              <ChevronLeftIcon />\r\n            ) : (\r\n              <ChevronRightIcon />\r\n            )}\r\n          </IconButton>\r\n        </div>\r\n        <Button\r\n          variant=\"contained\"\r\n          id=\"CWE\"\r\n          onClick={() => {\r\n            if (history.location.pathname === \"/\") return null;\r\n            changeURL(\"\");\r\n          }}\r\n        >\r\n          CWE\r\n        </Button>\r\n        <Divider />\r\n        <List>\r\n          {renderLogOutAndProfile()}\r\n\r\n          <Divider />\r\n        </List>\r\n\r\n        <List>\r\n          {AddFrindButtonAndFriendList()}\r\n\r\n        </List>\r\n\r\n        <List>\r\n          {renderFrindsList()}\r\n\r\n        </List>\r\n        {renderImgLeg()}\r\n      </Drawer>\r\n      <main\r\n        className={clsx(classes.content, {\r\n          [classes.contentShift]: open,\r\n        })}\r\n      >\r\n        <div className={classes.drawerHeader} />\r\n        {children}\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = ({ user, language }) => ({\r\n  user,\r\n  language\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  changeLeg,\r\n  createCHAT,\r\n  openChat,\r\n  deleteChat,\r\n  fetchChats,\r\n  signOut,\r\n})(DrawerPage);\r\n","import React from \"react\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { add_Friend, updatefriend, deleteFriend, addMessage } from \"../action\";\r\nimport myserver from \"../api/myserver\";\r\nimport io from \"../io\";\r\n\r\nclass LogicArea extends React.Component {\r\n  state = {\r\n    show: false,\r\n    whatKind: \"\",\r\n    body: \"\",\r\n    lastFriendReq: {},\r\n    newReqSound: new Audio(\"newReq.mp3\"),\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.setListenerSocket();\r\n  }\r\n  setListenerSocket = () => {\r\n    if (this.props.isLogin && this.props.user) {\r\n      if (!io.connected) {\r\n        io.connect();\r\n      }\r\n      io.on('userLive' + this.props.user._id, ({ type, data }) => {\r\n        switch (type) {\r\n\r\n\r\n          //my friend req have been accept\r\n          case \"newFriendReq\":\r\n            console.log(\"friend\");\r\n            if (data.status === \"sender\") {\r\n              this.state.newReqSound.play();\r\n\r\n              this.setState({\r\n                lastFriendReq: data,\r\n                show: true,\r\n                whatKind: \"newFriendreq\",\r\n                body: data.firstName + \" \" + data.lastName,\r\n              });\r\n            }\r\n            this.props.add_Friend(data);\r\n\r\n            break;\r\n\r\n          // friend request accept \r\n          case \"firendReqAccept\":\r\n            if (data.status === \"accept\") {\r\n              this.state.newReqSound.play();\r\n\r\n              this.setState({\r\n                lastFriendReq: data,\r\n                show: true,\r\n                whatKind: \"newFriendreq\",\r\n                body: data.firstName + \" \" + data.lastName,\r\n              });\r\n            }\r\n            this.props.updatefriend({\r\n              _id: data._id,\r\n              status: \"accept\",\r\n              chatId: data.chatId,\r\n              user: data,\r\n              chat: data.chat,\r\n            });\r\n            break;\r\n\r\n          // friend  as been delete \r\n          case \"deleteFriend\":\r\n            console.log(\"delete\");\r\n            this.props.deleteFriend(data);\r\n            break;\r\n\r\n          // your friend request has been decline\r\n          case \"declineFriendReq\":\r\n            console.log(\"decline\");\r\n            this.props.deleteFriend(data);\r\n            break;\r\n\r\n          // your friend  has block you as a friend\r\n          case \"blockFriendReq\":\r\n            console.log(\"block\");\r\n\r\n            this.props.updatefriend({\r\n              _id: data._id,\r\n              user: data,\r\n              status: \"decline\",\r\n            });\r\n            break;\r\n          case \"message\":\r\n            this.props.addMessage(data);\r\n            console.log('got a message');\r\n            break;\r\n\r\n          default:\r\n            alert(data);\r\n            break;\r\n        }\r\n\r\n      });\r\n\r\n    } else if (this.state.id && !this.props.isLogin && !this.props.user) {\r\n      io.off();\r\n    }\r\n  };\r\n  onClickDeclineReq = (sender) => {\r\n    this.setState({ show: false });\r\n\r\n    // let res = await\r\n    myserver.post(\"/api/user/declineFriendReq\", {\r\n      sender: this.props.user,\r\n      geter: sender,\r\n    });\r\n  };\r\n\r\n  onClickAcceptReq = async (sender) => {\r\n    this.setState({ show: false });\r\n\r\n    //sender is who that accept a req geter is who that send a req\r\n    let res = await myserver.post(\"/api/user/friendreqaccept\", {\r\n      accepter: this.props.user,\r\n      sender: sender,\r\n    });\r\n\r\n    // res get \"good\" || \"bad\" String the rest is going on socket\r\n    alert(res.data);\r\n  };\r\n  onShowOrHide = () => {\r\n    this.setState({ show: !this.state.show });\r\n  };\r\n\r\n  renderModal = () => {\r\n    if (!this.state.show) return null;\r\n    var onGood, onBad, good, bad, header, body;\r\n\r\n    switch (this.state.whatKind) {\r\n      case \"error\":\r\n        bad = \"close\";\r\n        header = \"error\";\r\n        body = this.state.body;\r\n        onBad = () => this.onShowOrHide();\r\n        break;\r\n      case \"newFriendReq\":\r\n        console.log(this.state.lastFriendReq);\r\n        good = \"Accept\";\r\n        bad = \"Decline\";\r\n        header = \"you got new friend request\";\r\n        body = `your new friend request send from ${this.state.body} `;\r\n        onGood = () => {\r\n          this.onClickAcceptReq(this.state.lastFriendReq);\r\n        };\r\n        onBad = () => {\r\n          this.onClickDeclineReq(this.state.lastFriendReq);\r\n        };\r\n        break;\r\n      case \"friendReqAccept\":\r\n        bad = \"close\";\r\n        header = \"you Got Accept\";\r\n        body = ` ${this.state.body} accept your friend request 😎 `;\r\n        onBad = () => this.onShowOrHide();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return (\r\n      <Modal\r\n        aria-labelledby=\"contained-modal-title-vcenter\"\r\n        centered\r\n        show={this.state.show}\r\n        onHide={this.onShowOrHide}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{header}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>{body}</Modal.Body>\r\n        <Modal.Footer>\r\n          {good ? (\r\n            <Button variant=\"secondary\" onClick={onGood}>\r\n              {good}\r\n            </Button>\r\n          ) : null}\r\n          {bad ? (\r\n            <Button variant=\"danger\" onClick={onBad}>\r\n              {bad}\r\n            </Button>\r\n          ) : null}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <>{this.renderModal()}</>;\r\n  }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  add_Friend,\r\n  updatefriend,\r\n  deleteFriend,\r\n  addMessage\r\n})(LogicArea);\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { changeURL } from '../../history';\r\n\r\n\r\nclass Profile extends React.Component{\r\n    componentDidMount(){\r\n        if(!this.props.user||!this.props.isLogin) changeURL('/');\r\n    }\r\n    renderName=()=>{\r\n        if(!this.props.user||!this.props.isLogin)  return null\r\n\r\n        return this.props.user.firstName\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n               <h1>Hello {this.renderName()} </h1> \r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => ({\r\nisLogin:state.auth.isLogin,\r\nuser:state.user,    \r\n})\r\n\r\n\r\nexport default connect(mapStateToProps,{})(Profile);","import React from \"react\";\r\nimport { Avatar, Tooltip, Grid } from \"@material-ui/core\";\r\nimport { Button, Col, ListGroup, Row } from \"react-bootstrap\";\r\n\r\nfunction FrindCard({ friend, buttons }) {\r\n  const renderBuutonChatOrAccept = () => {\r\n    if (friend.status !== \"waiting\")\r\n      return (\r\n        <Grid key={friend._id} item>\r\n          {buttons.map((button) => {\r\n            return (\r\n              <Tooltip\r\n                onClick={() => button.onClick(friend)}\r\n                key={button.title}\r\n                title={button.title}\r\n              >\r\n                <Button>{button.text}</Button>\r\n              </Tooltip>\r\n            );\r\n          })}\r\n        </Grid>\r\n      );\r\n    return (\r\n      <Tooltip\r\n        key={\"waiting\"}\r\n        title={\"waiting for \" + friend.firstName + \" to response\"}\r\n      >\r\n        <Button>{\"Pending\"}</Button>\r\n      </Tooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ListGroup.Item className=\"row\">\r\n      <Row>\r\n        <Col xs=\"4\">\r\n          <Avatar\r\n            alt=\"profile\"\r\n            src={friend.imageProfile}\r\n            style={{ fontSize: 30 }}\r\n          />\r\n        </Col>\r\n        <Col xs=\"5\">\r\n          <p>{`${friend.firstName} ${friend.email}`}</p>\r\n        </Col>\r\n        <Col xs=\"3\">{renderBuutonChatOrAccept()}</Col>\r\n      </Row>\r\n    </ListGroup.Item>\r\n  );\r\n}\r\n\r\nexport default FrindCard;\r\n","import React from \"react\";\r\nimport FrindCard from \"./FrindCard\";\r\n\r\nexport default function UsersList({\r\n  whatKindOfList,\r\n  friends,\r\n  buttons,\r\n  friendsListHeader,\r\n}) {\r\n  const renderUsersList = (text) => {\r\n    let arr = [];\r\n    if (friends.length > 0) {\r\n      friends.map((friend) =>\r\n        whatKindOfList.indexOf(friend.status) === -1\r\n          ? null\r\n          : arr.push(\r\n              <FrindCard key={friend._id} friend={friend} buttons={buttons} />\r\n            )\r\n      );\r\n    }\r\n    if (arr.length > 0) {\r\n      return (\r\n        <div>\r\n          <h3 className={\"friendsListHeader\"}>{friendsListHeader}</h3>\r\n          {arr}\r\n        </div>\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return renderUsersList();\r\n}\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { updatefriend, openChat } from \"../../action\";\r\nimport myserver from \"../../api/myserver\";\r\nimport UsersList from \"../chat/UsersList\";\r\n\r\nconst FriendsList = (props) => {\r\n  const onClickAcceptReq = (geter) => {\r\n    myserver.post(\"/api/user/friendreqaccept\", {\r\n      sender: props.user,\r\n      geter,\r\n    });\r\n  };\r\n  const onclickDeletefriend = (geter) => {\r\n    console.log(\"delete\");\r\n    myserver.post(\"/api/user/deletefriendreq\", {\r\n      sender: props.user,\r\n      geter,\r\n    });\r\n  };\r\n  const onclickBlockfriend = (geter) => {\r\n    myserver.post(\"/api/user/blockfriendreq\", {\r\n      sender: props.user,\r\n      geter,\r\n    });\r\n  };\r\n\r\n  const onUnblockAfriend = (geter) => {\r\n    myserver.post(\"/api/user/unblockFirend\", {\r\n      sender: props.user,\r\n      geter,\r\n    });\r\n  };\r\n  const onOpenChat = (friend) => {\r\n    props.openChat(friend.chatId);\r\n  };\r\n  let btn1 = [\r\n    { onClick: onOpenChat, text: \"Open Chat\", title: \"Open Chat\" },\r\n    { onClick: onclickDeletefriend, text: \"Delete\", title: \"Delete Friend\" },\r\n    { onClick: onclickBlockfriend, text: \"Block\", title: \"Block A Friend\" },\r\n  ];\r\n  let btn2 = [\r\n    { onClick: onclickBlockfriend, text: \"Block\", title: \"Block Request\" },\r\n    { onClick: onClickAcceptReq, text: \"Accept\", title: \"Accept Request\" },\r\n    {\r\n      onClick: onclickDeletefriend,\r\n      text: \"Decline\",\r\n      title: \"Decline Request\",\r\n    },\r\n  ];\r\n  let btn3 = [\r\n    { onClick: onUnblockAfriend, text: \"UnBlock\", title: \"UnBlock A Friend\" },\r\n  ];\r\n\r\n  const renderFriendsList = () => {\r\n    if (props.isLogin && props.user) {\r\n      const friends = Object.values(props.user.connections);\r\n      return (\r\n        <div>\r\n          <UsersList\r\n            friends={friends}\r\n            friendsListHeader={\"Friends\"}\r\n            buttons={btn1}\r\n            whatKindOfList={[\"accept\", \"iaccept\"]}\r\n          />\r\n\r\n          <UsersList\r\n            friends={friends}\r\n            friendsListHeader={\"Pendding Friends\"}\r\n            buttons={btn2}\r\n            whatKindOfList={[\"waiting\", \"sender\"]}\r\n          />\r\n\r\n          <UsersList\r\n            friends={friends}\r\n            friendsListHeader={\"Dark List\"}\r\n            buttons={btn3}\r\n            whatKindOfList={[\"iblock\"]}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <h1>Please logIng Or Register</h1>;\r\n  };\r\n\r\n  return <Container>{renderFriendsList()}</Container>;\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  isLogin: state.auth.isLogin,\r\n});\r\n\r\nexport default connect(mapStateToProps, { updatefriend, openChat })(\r\n  FriendsList\r\n);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport const ChatWindow = (props) => {\r\n  const renderDateOfCreateMessage = (date) => {\r\n    var d = new Date();\r\n\r\n    date = new Date(date);\r\n    var numberOfDays = Math.floor((d - date) / (1000 * 60 * 60 * 24));\r\n    switch (numberOfDays) {\r\n      case 0:\r\n        return \"today\";\r\n      case 1:\r\n        return \"Yesterday\";\r\n      case 2:\r\n        return \"3 days ago\";\r\n      default:\r\n        return `${date.d}/${date.m}/${date.y}`;\r\n    }\r\n  };\r\n\r\n  const renderMessgesList = () => {\r\n    return props.mesagesArr.map((message, index) => {\r\n      return (\r\n        <div\r\n          key={message.message + index}\r\n          aria-live=\"polite\"\r\n          aria-atomic=\"true\"\r\n          style={{\r\n            position: \"relative\",\r\n            minHeight: \"100px\",\r\n          }}\r\n        >\r\n          <div\r\n            style={renderStyleForTheMessage(message.senderId, {\r\n              textAlign: \"right\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 0,\r\n              minWidth: \"100px\",\r\n            })}\r\n            id=\"body-message\"\r\n          >\r\n            <div\r\n              style={renderStyleForTheMessage(message.senderId, {\r\n                backgroundColor: \"#b5f66f\",\r\n              })}\r\n              id=\"message\"\r\n            >\r\n              <p id=\"textMessage\">{message.message}</p>\r\n            </div>\r\n            <small>\r\n              {\" \"}\r\n              {`${renderDateOfCreateMessage(message.createTime.date)} at ${message.createTime.time\r\n                } by ${message.senderName}`}{\" \"}\r\n            </small>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderStyleForTheMessage = (email, style) => {\r\n    return email === props.user.email ? style : {};\r\n  };\r\n  return (\r\n    <div id=\"chat-window\">\r\n      <div id=\"output\">\r\n        <div>{renderMessgesList()}</div>\r\n\r\n        {props.scroolDown}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ChatWindow);\r\n","import React from \"react\";\r\nimport { InputGroup, FormControl, Button } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport io from \"../../io\";\r\nimport \"../../css/Chat.css\";\r\nimport { changeURL } from \"../../history\";\r\nimport ChatWindow from \"../chat/ChatWindow\";\r\nfunction getTimeIn24Format() {\r\n  var d = new Date();\r\n  var n = d.toLocaleString([], { hour: \"2-digit\", minute: \"2-digit\" });\r\n  return n;\r\n}\r\n\r\nfunction getDate() {\r\n  let date = new Date();\r\n  console.log(date);\r\n  return date;\r\n  // return {m:d.getMonth()+1,d:d.getDate(),y:d.getFullYear()}\r\n}\r\n\r\nclass ChatScreen extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      meassge: \"\",\r\n      meassges: [],\r\n      whoIsTypeingNow: [],\r\n      show: false,\r\n    };\r\n\r\n    this.scroolDown = React.createRef();\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.call) {\r\n      this.myStream = this.props.call.myStream;\r\n      this.theirStream = this.props.call.theirStream;\r\n      this.gotAcall = this.props.call.onCall;\r\n      this.user = this.props.user;\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    if (!this.props.isLogin) {\r\n      changeURL(\"/\");\r\n    }\r\n  }\r\n  componentWillUnmount() {\r\n    io.close(\"typeing\" + this.props.chat.chatId);\r\n  }\r\n  scrooDown = () => {\r\n    return (\r\n      <div\r\n        id=\"hideScrool\"\r\n        style={{ float: \"left\", clear: \"both\" }}\r\n        ref={(el) => {\r\n          this.scroolDown = el;\r\n        }}\r\n      >\r\n        {\" \"}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  scrollToBottom = () => {\r\n    this.meassgesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  addmessage = (message) => {\r\n    console.log(message);\r\n  };\r\n  onChangeText = (e) => {\r\n    this.setState({ meassge: e.currentTarget.value });\r\n    io.emit(\r\n      \"typeing\",\r\n      e.currentTarget.value\r\n        ? { senderName: this.user.firstName, show: true, chatId: this.props.chat.chatId }\r\n        : { senderName: this.user.firstName, show: false, chatId: this.props.chat.chatId }\r\n    );\r\n  };\r\n\r\n  onEnterPress = (e) => {\r\n    if (e.keyCode === 13 && e.shiftKey === false) {\r\n      this.handlerClickMSG(e);\r\n    }\r\n  };\r\n  handlerClickMSG = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.meassge) return null;\r\n\r\n    this.setState({ meassge: \"\" });\r\n    io.emit(\"typeing\", {\r\n      senderName: this.user.firstName,\r\n      show: false,\r\n      chatId: this.props.chat.chatId,\r\n    });\r\n    io.emit(\"message\", {\r\n      message: this.state.meassge,\r\n      senderName: this.user.firstName,\r\n      senderId: this.user.email,\r\n      chatId: this.props.chat.chatId,\r\n      createTime: { time: getTimeIn24Format(), date: getDate() },\r\n    });\r\n  };\r\n\r\n  renderSomeOneIsTypeing = () => {\r\n    if (this.state.whoIsTypeingNow.length < 1) return null;\r\n    else if (this.state.whoIsTypeingNow.length === 1) {\r\n      return (\r\n        <p>\r\n          <em>{this.state.whoIsTypeingNow}</em> is typeing a meassge\r\n        </p>\r\n      );\r\n    } else {\r\n      let names = \"\";\r\n      this.state.whoIsTypeingNow.map((name) => (names = names + \" \" + name));\r\n      return (\r\n        <p>\r\n          <em>{names}</em> is typeing a meassge\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  auto_height(elem) {\r\n    elem.style.height = \"1px\";\r\n    elem.style.height = elem.scrollHeight + \"px\";\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isLogin) {\r\n      changeURL(\"/\");\r\n      return <h1>erro</h1>;\r\n    }\r\n    if (!this.props.chat.chats[this.props.chat.chatId]) {\r\n      changeURL(\"/\");\r\n      return <h1>dsads</h1>;\r\n    }\r\n\r\n    return (\r\n      <div id=\"mario-chat\">\r\n        <div id=\"feedback\">{this.renderSomeOneIsTypeing()}</div>\r\n        <ChatWindow\r\n          user={this.user}\r\n          mesagesArr={this.props.chat.chats[this.props.chat.chatId].messages}\r\n        />\r\n        <form onSubmit={this.handlerClickMSG}>\r\n          <InputGroup id=\"messageinput\">\r\n            <InputGroup.Append>\r\n              <Button\r\n                onClick={this.setUpOffer}\r\n                id=\"buttonCall\"\r\n                style={{\r\n                  backgroundColor: this.state.meassge ? \"green\" : \"black\",\r\n                }}\r\n                variant=\"outline-secondary\"\r\n              >\r\n                call\r\n              </Button>\r\n            </InputGroup.Append>\r\n            <FormControl\r\n              onKeyDown={this.onEnterPress}\r\n              as=\"textarea\"\r\n              rows=\"1\"\r\n              aria-multiline\r\n              autoComplete=\"off\"\r\n              onChange={this.onChangeText}\r\n              value={this.state.meassge}\r\n              type=\"text\"\r\n              placeholder=\"type a message\"\r\n            />\r\n            <InputGroup.Append>\r\n              <Button\r\n                id=\"buttonChat\"\r\n                style={{\r\n                  backgroundColor: this.state.meassge ? \"#575ed8\" : \"#898bce\",\r\n                }}\r\n                type=\"submit\"\r\n                variant=\"outline-secondary\"\r\n              ></Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  call: state.call,\r\n  user: state.user,\r\n  isLogin: state.auth.isLogin,\r\n  chat: state.chatArea,\r\n  languages: state.languages\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(ChatScreen);\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, FormControl, InputGroup } from 'react-bootstrap'\r\nimport { userLoginUrl } from '../../api/apiKeys'\r\nimport myserver from '../../api/myserver'\r\n\r\nexport default function Login({ language }) {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [hidePassword, setHidePassword] = useState(true)\r\n  const [error, setError] = useState('')\r\n\r\n  const handlerSubmit = async e => {\r\n    try {\r\n      e.preventDefault();\r\n      const res = await myserver.get(userLoginUrl(password, email))\r\n      console.log(res);\r\n    } catch (error) {\r\n      setError(error.message)\r\n    }\r\n  }\r\n\r\n  const renderErrorMessage = () => {\r\n    return error ? (\r\n      <Form.Text className=\" error\">\r\n        {error}\r\n      </Form.Text>\r\n    ) : null\r\n\r\n  }\r\n\r\n\r\n  let texts = language.texts.loginRegisterScreen\r\n  return (\r\n    <Form onSubmit={handlerSubmit}>\r\n      <h1 className=\"L-R-Leabel\">{texts.login.leabel}</h1>\r\n      <Form.Group className=\"\" controlId=\"formBasicEmail\">\r\n        <Form.Label>{texts.email.leabel}</Form.Label>\r\n        <Form.Control\r\n          value={email}\r\n          required\r\n          type=\"email\"\r\n          onChange={e => setEmail(e.target.value)}\r\n          placeholder={texts.email.placeholder}\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          {texts.email.subText}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>{texts.password.leabel}</Form.Label>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            required\r\n            type={hidePassword ? 'password' : 'text'}\r\n            placeholder={texts.password.placeholder}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button onClick={() => setHidePassword(!hidePassword)} variant={`${hidePassword ? \"primary\" : \"danger\"}`} >\r\n              {hidePassword ? \"Show\" : \"Hide\"}\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n        {renderErrorMessage()}\r\n\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        {texts.login.button}\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Form, FormControl, InputGroup } from 'react-bootstrap'\r\n\r\nexport default function Register({ onRegister, language }) {\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [password2, setPassword2] = useState('')\r\n  const [error, setError] = useState('')\r\n\r\n  const texts = language.texts.loginRegisterScreen\r\n\r\n  const [hidePassword, setHidePassword] = useState(true)\r\n  const handlerSubmit = e => {\r\n    e.persist();\r\n    // eslint-disable-next-line\r\n    const re = new RegExp(\"^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{7,32}$\");\r\n    const isOk = re.test(password);\r\n\r\n\r\n    if (!isOk) {\r\n      setError(texts.password.error)\r\n      return\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n  const renderErrorMessage = () => {\r\n    return error ? (\r\n      <Form.Text className=\" error\">\r\n        {error}\r\n      </Form.Text>\r\n    ) : null\r\n\r\n  }\r\n\r\n  return (\r\n    <Form onSubmit={handlerSubmit}>\r\n      <h1 className=\"L-R-Leabel\">{texts.register.leabel}</h1>\r\n\r\n      <Form.Group controlId=\"formBasicEmail\">\r\n        <Form.Label>{texts.email.leabel}</Form.Label>\r\n        <Form.Control value={email} required type=\"email\" onChange={e => setEmail(e.target.value)} placeholder={texts.email.placeholder} />\r\n\r\n        <Form.Text className=\"text-muted\">\r\n          {texts.email.subText}\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>{texts.password.leabel}</Form.Label>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            value={password}\r\n            onChange={e => setPassword(e.target.value)}\r\n            required\r\n            type={hidePassword ? 'password' : 'text'}\r\n            placeholder={texts.password.placeholder}\r\n          />\r\n          <InputGroup.Append>\r\n            <Button onClick={() => setHidePassword(!hidePassword)} variant={`${hidePassword ? \"primary\" : \"danger\"}`} >\r\n              {hidePassword ? \"Show\" : \"Hide\"}\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formBasicPassword\">\r\n        <Form.Label>{texts.password.leabel2}</Form.Label>\r\n        <InputGroup className=\"mb-3\">\r\n          <FormControl\r\n            value={password2}\r\n            onChange={e => setPassword2(e.target.value)}\r\n            required\r\n            type={hidePassword ? 'password' : 'text'}\r\n            placeholder={texts.password.placeholder2}\r\n          />\r\n\r\n        </InputGroup>\r\n        {renderErrorMessage()}\r\n      </Form.Group>\r\n\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        {texts.register.button}\r\n      </Button>\r\n    </Form>\r\n  )\r\n}\r\n","/* eslint-disable no-useless-escape */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport { useState } from \"react\";\r\nimport Login from \"../chat/Login\";\r\nimport Register from \"../chat/Register\";\r\n\r\n\r\n\r\nconst ScreenLoginRegister = ({ user, language: { texts: { loginRegisterScreen } }, language }) => {\r\n  const [login, setLogin] = useState(true)\r\n\r\n\r\n  const renderLoginOrRegistration = () => login ?\r\n    <Login language={language} /> :\r\n    <Register language={language} />\r\n\r\n  const renderButtonChangeMode = () => {\r\n    return (\r\n      <Button onClick={() => setLogin(!login)} id='changeModeRL' variant=\"primary\" size=\"lg\" block>\r\n        {login ? loginRegisterScreen.register.buttonForRegister : loginRegisterScreen.login.buttonForLogin}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Container className=\"\">\r\n      <div className=\"containerLogin\">\r\n        {renderLoginOrRegistration()}\r\n        {renderButtonChangeMode()}\r\n\r\n      </div>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = ({ user, language }) => {\r\n  return { user, language };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(ScreenLoginRegister);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ScreenLoginRegister from \"./ScreenLoginRegister\";\r\nconst LobyPageScreen = ({ user }) => {\r\n  if (!user) {\r\n    return <ScreenLoginRegister />;\r\n  }\r\n  return (\r\n    <div>\r\n      <h1>Main Page Screen</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ user }) => ({\r\n  user,\r\n});\r\n\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LobyPageScreen);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route, HashRouter } from \"react-router-dom\";\r\n\r\nimport SerachFriend from \"./components/screens/ScreenSerachFriend\";\r\nimport DrawerPage from \"./components/screens/DrawerPage\";\r\nimport LogicArea from \"./components/LogicArea\";\r\nimport Profile from \"./components/screens/ProfileScreen\";\r\nimport FriendsList from \"./components/screens/FriendsListScreen\";\r\nimport ChatScreen from \"./components/screens/ChatScreen\";\r\nimport LobyPageScreen from \"./components/screens/LobyPageScreen\";\r\nimport { fetchChats } from \"./action\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/App.css\";\r\n\r\n\r\nconst App = ({ user, fetchChats, language }) => {\r\n  // useEffect(() => {\r\n  // if (user) fetchChats(user.chats);\r\n  // }, [user, fetchChats]);\r\n\r\n  return (\r\n    <DrawerPage >\r\n      {/* <LogicArea /> */}\r\n      <HashRouter >\r\n        <Route path=\"/profile\" exact component={Profile} />\r\n        <Route path=\"/addFrind\" exact component={SerachFriend} />\r\n        <Route path=\"/chat\" exact component={ChatScreen} />\r\n        <Route path=\"/friends.list\" exact component={FriendsList} />\r\n        <Route path=\"/\" exact component={LobyPageScreen} />\r\n      </HashRouter>\r\n    </DrawerPage>\r\n  );\r\n};\r\nconst mapStateToProps = ({ user, language }) => ({\r\n  user,\r\n  language,\r\n\r\n});\r\n\r\nexport default connect(mapStateToProps, { fetchChats })(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {\r\n  CREATE_CHAT,\r\n  FETCH_CHATS,\r\n  OPEN_CHAT,\r\n  ADD_MESSAGE,\r\n  UPDATE_STATUS_FRIEND,\r\n} from \"../action/types\";\r\n\r\nconst INS = { chats: {}, chatId: \"\" };\r\n\r\nexport default (state = INS, action) => {\r\n  switch (action.type) {\r\n    case FETCH_CHATS:\r\n      action.payload.forEach((chat) => {\r\n        state.chats[chat._id] = chat;\r\n      });\r\n\r\n      return { ...state };\r\n    case CREATE_CHAT:\r\n      state.chats[action.payload._id] = action.payload;\r\n      return { ...state };\r\n    case ADD_MESSAGE:\r\n      console.log(action.payload)\r\n      state.chats[action.payload.chatId].messages.push(action.payload.message);\r\n      return { ...state };\r\n    // case DELETE_CHAT:return _.omit(state,action.payload);\r\n    case OPEN_CHAT:\r\n      state.chatId = action.payload._id;\r\n      return { ...state };\r\n    case UPDATE_STATUS_FRIEND:\r\n      state.chats[action.payload.chat._id] = action.payload.chat;\r\n\r\n      return { ...state };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const INS = {\r\n    onCall: false,\r\n    myStream: {},\r\n    thierStream: {},\r\n\r\n}\r\n\r\nexport default (state = INS, action) => {\r\n\r\n    switch (action.type) {\r\n        case 'dsa':\r\n\r\n            break;\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import { CHANGE_LEGUAGE } from \"../action/types\";\r\nconst INS = {\r\n    English: {\r\n        navBtn: {\r\n            signIn: 'SignIn',\r\n            signOut: 'SignOut',\r\n            gallery: \"Gallery \"\r\n\r\n        },\r\n        loginRegisterScreen: {\r\n\r\n            errorLogin: {\r\n                infoInvalid: \"Email or password not valid please try agian\",\r\n                usersNotFound: \"User does not exist \",\r\n                UserIsAlreadyCreated: \"User is already exist\",\r\n                loginFaildAlreadyConnect: \"User is already login\",\r\n            },\r\n            login: {\r\n                buttonForLogin: \"Sgin in\",\r\n                leabel: \"Sgin in\",\r\n                button: \"Sgin in\",\r\n            },\r\n            register: {\r\n                buttonForRegister: \" Sign up\",\r\n                leabel: \"Sign up\",\r\n                button: \"Sign up \",\r\n            },\r\n            email: {\r\n                subText: \"We'll never share your email with anyone else.. \",\r\n                placeholder: \"Enter Email example@example.com\",\r\n                error: \"Invalid email\",\r\n                leabel: \"Email\",\r\n            },\r\n            password: {\r\n                placeholder: \"Password\",\r\n                error:\r\n                    \"Your password must include at least 8 characters. At least 1 number And upper case  (like AWDS).  \",\r\n                leabel: \"Password\",\r\n            },\r\n            firstName: {\r\n                error:\r\n                    \"You must enter a first name without numbers and contain at least 2 characters\",\r\n                leabel: \"FirstName\",\r\n            },\r\n            lastName: {\r\n                error:\r\n                    \"You must enter a last name without numbers and contain at least 2 characters\",\r\n                leabel: \"LastName\",\r\n            },\r\n            address: {\r\n                error: \"Need to enter full address city street number house\",\r\n                leabel: \"full address\",\r\n            },\r\n            phone: {\r\n                error: \"Need to enter phone number\",\r\n                leabel: \"Phone number\",\r\n            },\r\n        }\r\n    },\r\n    Hebrew: {\r\n        navBtn: {\r\n            signIn: 'להתחבר',\r\n            signOut: 'להתנתק'\r\n        },\r\n        loginRegisterScreen: {\r\n\r\n            errorLogin: {\r\n                infoInvalid: \"אימייל או הסיסמה לא נכונים\",\r\n                usersNotFound: \"המשתמש לא קיים \",\r\n                UserIsAlreadyCreated: \"המשתמש כבר קיים\",\r\n                loginFaildAlreadyConnect:\r\n                    \"המשתמש כבר מחובר בבקשה תבדוק אם יש לך חלונית נוספת \",\r\n            },\r\n            login: {\r\n                buttonForLogin: \" משמשמת רשום\",\r\n                leabel: \"להתחבר לאתר\",\r\n                button: \"להתחבר\",\r\n            },\r\n            register: {\r\n                buttonForRegister: \"  חדש כאן\",\r\n                leabel: \"הרשמה לאתר\",\r\n                button: \"להירשם\",\r\n            },\r\n            email: {\r\n                subText: 'לעולם לא נשתף את הדוא\"ל שלך עם אף אחד אחר. ',\r\n                placeholder: \"exmaple@example.com הכנס אימייל לדוגמה \",\r\n                error: \"אימייל הינו תקין\",\r\n                leabel: \"אימייל\",\r\n            },\r\n            password: {\r\n                placeholder: \"הכנס סיסמה חזקה \",\r\n                error:\r\n                    \"וספרות (A-Z)ותו גדול (a-z)  על הסיסמה להיות מינימום 7 תווים ולהכיל תווים  \",\r\n                leabel: \"סיסמה\",\r\n                leabel2: 'וידוי סיסמה ',\r\n                placeholder2: 'הכנס את הסיסמה שינית'\r\n            },\r\n            firstName: {\r\n                error: \"צריך להכניס שם פרטי בלי מספרים ולהכיל 2 תווים לפחות\",\r\n                leabel: \"שם פרטי\",\r\n            },\r\n            lastName: {\r\n                error: \"צריך להכניס שם משפחה בלי מספרים ולהכיל 2 תווים לפחות\",\r\n                leabel: \"שם משפחה\",\r\n            },\r\n            address: {\r\n                error: \"צריך להכניס כתובת מלאה עיר רחוב מספר בית\",\r\n                leabel: \"כתובת מלאה\",\r\n            },\r\n            phone: {\r\n                error: \"צריך להכניס מספר טלפון\",\r\n                leabel: \"מספר טלפון\",\r\n            }\r\n        },\r\n    },\r\n};\r\n\r\n\r\n\r\nconst languageReducer = (state = { texts: INS['English'], langNow: 'English', languages: Object.keys(INS) }, action) => {\r\n    switch (action.type) {\r\n        case CHANGE_LEGUAGE:\r\n\r\n            return { texts: INS[action.payload], langNow: action.payload, languages: Object.keys(INS) }\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n}\r\nexport default languageReducer","import { combineReducers } from 'redux';\r\nimport { reducer } from 'redux-form';\r\n\r\nimport userReducer from './userReducer'\r\nimport userAreaReducer from './chatArea';\r\nimport callReducer from './callReducer';\r\nimport languageReducer from './languageReducer';\r\n\r\nexport default combineReducers({\r\n    user: userReducer,\r\n    form: reducer,\r\n    chatArea: userAreaReducer,\r\n    language: languageReducer,\r\n    call: callReducer\r\n});","import {\r\n  CREATE_USER,\r\n  LOGIN,\r\n  SIGN_OUT,\r\n  NEW_FRIEND,\r\n  UPDATE_STATUS_FRIEND,\r\n  DELETE_FRIEND,\r\n} from \"../action/types\";\r\n\r\nexport default (state = null, action) => {\r\n  switch (action.type) {\r\n    case CREATE_USER:\r\n      return action.payload;\r\n    case LOGIN:\r\n      return action.payload;\r\n    case SIGN_OUT:\r\n      return null;\r\n    case NEW_FRIEND:\r\n      if (!state.connections[action.payload._id]) {\r\n        state.connections[action.payload._id] = action.payload;\r\n      }\r\n      return { ...state };\r\n    case UPDATE_STATUS_FRIEND:\r\n      if (state.connections[action.payload._id]) {\r\n        const { user, _id } = action.payload;\r\n        state.connections[_id] = user;\r\n        state.chats[action.payload.chatId] = {\r\n          _id: action.payload.chatId,\r\n          type: \"friend\",\r\n        };\r\n      }\r\n      return { ...state };\r\n    case DELETE_FRIEND:\r\n      if (state.connections[action.payload._id]) {\r\n        delete state.connections[action.payload._id];\r\n      }\r\n      return { ...state };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reduxThunk from \"redux-thunk\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport reducers from \"./reducers\";\r\n// eslint-disable-next-line\r\nconst composeEnhancers =\r\n  (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n      trace: true,\r\n      traceLimit: 25,\r\n    })) ||\r\n  compose;\r\nconst store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","//user api\r\n//send {email, password,expoId}\r\n//recive {userData}\r\nexports.userLoginUrl = (password = '', email = '') => `/api/user/login?password=${password}&?email=${email}`;\r\n\r\n// send {email,password,firstName,lastName}\r\n//recive {userData}\r\nexports.userRegisterUrl = \"/api/user/register\";\r\n\r\n// send{newPassword,oldPassword,email}\r\n// recive none\r\n\r\nexports.userChangePasswrordUrl = \"/api/user/changepassword\";\r\n\r\n// send{email, restCode, newPassword}\r\n// recive none\r\nexports.userChangePasswordWithRestCode = \"/api/user/restpasswordrestcode\";\r\n\r\n//send {shitfs,email}\r\n//recivce shfit\r\nexports.useruploadshfits = \"/api/user/uploadshifts\";\r\n\r\n// send{email}\r\n// recive none\r\nexports.userRequestRestCode = \"/api/user/createrestpasswordcode\";\r\n\r\n\r\n// send arry of ids\r\n// recive array of cha_ts\r\nexports.userGetChatsUrl = \"/api/chat/getchats\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// send{audio, email, read={exports.audio=comapny||user},task=true}\r\n// recive none\r\nexports.userUpdateStyleUrl = \"api/user/updatestyleuser\";\r\n\r\n\r\n\r\n"],"sourceRoot":""}